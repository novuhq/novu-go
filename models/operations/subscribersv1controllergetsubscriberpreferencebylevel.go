// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/novuhq/novu-go/models/components"
)

// Parameter - the preferences level to be retrieved (template / global)
type Parameter string

const (
	ParameterGlobal   Parameter = "global"
	ParameterTemplate Parameter = "template"
)

func (e Parameter) ToPointer() *Parameter {
	return &e
}
func (e *Parameter) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "global":
		fallthrough
	case "template":
		*e = Parameter(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Parameter: %v", v)
	}
}

type SubscribersV1ControllerGetSubscriberPreferenceByLevelRequest struct {
	// A flag which specifies if the inactive workflow channels should be included in the retrieved preferences. Default is true
	IncludeInactiveChannels *bool `queryParam:"style=form,explode=true,name=includeInactiveChannels"`
	// the preferences level to be retrieved (template / global)
	PreferenceLevel Parameter `pathParam:"style=simple,explode=false,name=parameter"`
	SubscriberID    string    `pathParam:"style=simple,explode=false,name=subscriberId"`
	// A header for idempotency purposes
	IdempotencyKey *string `header:"style=simple,explode=false,name=idempotency-key"`
}

func (o *SubscribersV1ControllerGetSubscriberPreferenceByLevelRequest) GetIncludeInactiveChannels() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeInactiveChannels
}

func (o *SubscribersV1ControllerGetSubscriberPreferenceByLevelRequest) GetPreferenceLevel() Parameter {
	if o == nil {
		return Parameter("")
	}
	return o.PreferenceLevel
}

func (o *SubscribersV1ControllerGetSubscriberPreferenceByLevelRequest) GetSubscriberID() string {
	if o == nil {
		return ""
	}
	return o.SubscriberID
}

func (o *SubscribersV1ControllerGetSubscriberPreferenceByLevelRequest) GetIdempotencyKey() *string {
	if o == nil {
		return nil
	}
	return o.IdempotencyKey
}

type SubscribersV1ControllerGetSubscriberPreferenceByLevelResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	GetSubscriberPreferencesResponseDtos []components.GetSubscriberPreferencesResponseDto
	Headers                              map[string][]string
}

func (o *SubscribersV1ControllerGetSubscriberPreferenceByLevelResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *SubscribersV1ControllerGetSubscriberPreferenceByLevelResponse) GetGetSubscriberPreferencesResponseDtos() []components.GetSubscriberPreferencesResponseDto {
	if o == nil {
		return nil
	}
	return o.GetSubscriberPreferencesResponseDtos
}

func (o *SubscribersV1ControllerGetSubscriberPreferenceByLevelResponse) GetHeaders() map[string][]string {
	if o == nil {
		return map[string][]string{}
	}
	return o.Headers
}
