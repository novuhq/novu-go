// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/novuhq/novu-go/models/components"
)

type ContextsControllerGetContextRequest struct {
	// Context ID
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Context type
	Type string `pathParam:"style=simple,explode=false,name=type"`
	// A header for idempotency purposes
	IdempotencyKey *string `header:"style=simple,explode=false,name=idempotency-key"`
}

func (c *ContextsControllerGetContextRequest) GetID() string {
	if c == nil {
		return ""
	}
	return c.ID
}

func (c *ContextsControllerGetContextRequest) GetType() string {
	if c == nil {
		return ""
	}
	return c.Type
}

func (c *ContextsControllerGetContextRequest) GetIdempotencyKey() *string {
	if c == nil {
		return nil
	}
	return c.IdempotencyKey
}

type ContextsControllerGetContextResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	GetContextResponseDto *components.GetContextResponseDto
	Headers               map[string][]string
}

func (c *ContextsControllerGetContextResponse) GetHTTPMeta() components.HTTPMetadata {
	if c == nil {
		return components.HTTPMetadata{}
	}
	return c.HTTPMeta
}

func (c *ContextsControllerGetContextResponse) GetGetContextResponseDto() *components.GetContextResponseDto {
	if c == nil {
		return nil
	}
	return c.GetContextResponseDto
}

func (c *ContextsControllerGetContextResponse) GetHeaders() map[string][]string {
	if c == nil {
		return map[string][]string{}
	}
	return c.Headers
}
