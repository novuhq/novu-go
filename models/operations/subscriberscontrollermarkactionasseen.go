// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/novuhq/novu-go/models/components"
)

type SubscribersControllerMarkActionAsSeenRequest struct {
	MessageID                  string                                `pathParam:"style=simple,explode=false,name=messageId"`
	Type                       any                                   `pathParam:"style=simple,explode=false,name=type"`
	SubscriberID               string                                `pathParam:"style=simple,explode=false,name=subscriberId"`
	MarkMessageActionAsSeenDto components.MarkMessageActionAsSeenDto `request:"mediaType=application/json"`
}

func (o *SubscribersControllerMarkActionAsSeenRequest) GetMessageID() string {
	if o == nil {
		return ""
	}
	return o.MessageID
}

func (o *SubscribersControllerMarkActionAsSeenRequest) GetType() any {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *SubscribersControllerMarkActionAsSeenRequest) GetSubscriberID() string {
	if o == nil {
		return ""
	}
	return o.SubscriberID
}

func (o *SubscribersControllerMarkActionAsSeenRequest) GetMarkMessageActionAsSeenDto() components.MarkMessageActionAsSeenDto {
	if o == nil {
		return components.MarkMessageActionAsSeenDto{}
	}
	return o.MarkMessageActionAsSeenDto
}

type SubscribersControllerMarkActionAsSeenResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Created
	MessageResponseDto *components.MessageResponseDto
	Headers            map[string][]string
}

func (o *SubscribersControllerMarkActionAsSeenResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *SubscribersControllerMarkActionAsSeenResponse) GetMessageResponseDto() *components.MessageResponseDto {
	if o == nil {
		return nil
	}
	return o.MessageResponseDto
}

func (o *SubscribersControllerMarkActionAsSeenResponse) GetHeaders() map[string][]string {
	if o == nil {
		return map[string][]string{}
	}
	return o.Headers
}
