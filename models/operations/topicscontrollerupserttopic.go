// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/novuhq/novu-go/models/components"
)

type TopicsControllerUpsertTopicRequest struct {
	FailIfExists bool `queryParam:"style=form,explode=true,name=failIfExists"`
	// A header for idempotency purposes
	IdempotencyKey              *string                                `header:"style=simple,explode=false,name=idempotency-key"`
	CreateUpdateTopicRequestDto components.CreateUpdateTopicRequestDto `request:"mediaType=application/json"`
}

func (o *TopicsControllerUpsertTopicRequest) GetFailIfExists() bool {
	if o == nil {
		return false
	}
	return o.FailIfExists
}

func (o *TopicsControllerUpsertTopicRequest) GetIdempotencyKey() *string {
	if o == nil {
		return nil
	}
	return o.IdempotencyKey
}

func (o *TopicsControllerUpsertTopicRequest) GetCreateUpdateTopicRequestDto() components.CreateUpdateTopicRequestDto {
	if o == nil {
		return components.CreateUpdateTopicRequestDto{}
	}
	return o.CreateUpdateTopicRequestDto
}

type TopicsControllerUpsertTopicResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	TopicResponseDto *components.TopicResponseDto
	Headers          map[string][]string
}

func (o *TopicsControllerUpsertTopicResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *TopicsControllerUpsertTopicResponse) GetTopicResponseDto() *components.TopicResponseDto {
	if o == nil {
		return nil
	}
	return o.TopicResponseDto
}

func (o *TopicsControllerUpsertTopicResponse) GetHeaders() map[string][]string {
	if o == nil {
		return map[string][]string{}
	}
	return o.Headers
}
