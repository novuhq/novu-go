// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/novuhq/novu-go/internal/utils"
	"github.com/novuhq/novu-go/models/components"
)

type TopicsControllerListTopicsRequest struct {
	// The page number to retrieve (starts from 0)
	Page *int64 `default:"0" queryParam:"style=form,explode=true,name=page"`
	// The number of items to return per page (default: 10)
	PageSize *int64 `default:"10" queryParam:"style=form,explode=true,name=pageSize"`
	// A filter key to apply to the results
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// A header for idempotency purposes
	IdempotencyKey *string `header:"style=simple,explode=false,name=idempotency-key"`
}

func (t TopicsControllerListTopicsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TopicsControllerListTopicsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TopicsControllerListTopicsRequest) GetPage() *int64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *TopicsControllerListTopicsRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *TopicsControllerListTopicsRequest) GetKey() *string {
	if o == nil {
		return nil
	}
	return o.Key
}

func (o *TopicsControllerListTopicsRequest) GetIdempotencyKey() *string {
	if o == nil {
		return nil
	}
	return o.IdempotencyKey
}

type TopicsControllerListTopicsResponse struct {
	HTTPMeta                components.HTTPMetadata `json:"-"`
	FilterTopicsResponseDto *components.FilterTopicsResponseDto
	Headers                 map[string][]string
}

func (o *TopicsControllerListTopicsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *TopicsControllerListTopicsResponse) GetFilterTopicsResponseDto() *components.FilterTopicsResponseDto {
	if o == nil {
		return nil
	}
	return o.FilterTopicsResponseDto
}

func (o *TopicsControllerListTopicsResponse) GetHeaders() map[string][]string {
	if o == nil {
		return map[string][]string{}
	}
	return o.Headers
}
