// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/novuhq/novu-go/models/components"
)

type SubscribersV1ControllerMarkActionAsSeenRequest struct {
	MessageID    string `pathParam:"style=simple,explode=false,name=messageId"`
	Type         any    `pathParam:"style=simple,explode=false,name=type"`
	SubscriberID string `pathParam:"style=simple,explode=false,name=subscriberId"`
	// A header for idempotency purposes
	IdempotencyKey             *string                               `header:"style=simple,explode=false,name=idempotency-key"`
	MarkMessageActionAsSeenDto components.MarkMessageActionAsSeenDto `request:"mediaType=application/json"`
}

func (s *SubscribersV1ControllerMarkActionAsSeenRequest) GetMessageID() string {
	if s == nil {
		return ""
	}
	return s.MessageID
}

func (s *SubscribersV1ControllerMarkActionAsSeenRequest) GetType() any {
	if s == nil {
		return nil
	}
	return s.Type
}

func (s *SubscribersV1ControllerMarkActionAsSeenRequest) GetSubscriberID() string {
	if s == nil {
		return ""
	}
	return s.SubscriberID
}

func (s *SubscribersV1ControllerMarkActionAsSeenRequest) GetIdempotencyKey() *string {
	if s == nil {
		return nil
	}
	return s.IdempotencyKey
}

func (s *SubscribersV1ControllerMarkActionAsSeenRequest) GetMarkMessageActionAsSeenDto() components.MarkMessageActionAsSeenDto {
	if s == nil {
		return components.MarkMessageActionAsSeenDto{}
	}
	return s.MarkMessageActionAsSeenDto
}

type SubscribersV1ControllerMarkActionAsSeenResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Created
	MessageResponseDto *components.MessageResponseDto
	Headers            map[string][]string
}

func (s *SubscribersV1ControllerMarkActionAsSeenResponse) GetHTTPMeta() components.HTTPMetadata {
	if s == nil {
		return components.HTTPMetadata{}
	}
	return s.HTTPMeta
}

func (s *SubscribersV1ControllerMarkActionAsSeenResponse) GetMessageResponseDto() *components.MessageResponseDto {
	if s == nil {
		return nil
	}
	return s.MessageResponseDto
}

func (s *SubscribersV1ControllerMarkActionAsSeenResponse) GetHeaders() map[string][]string {
	if s == nil {
		return map[string][]string{}
	}
	return s.Headers
}
