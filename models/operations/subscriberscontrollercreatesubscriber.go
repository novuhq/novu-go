// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/novuhq/novu-go/models/components"
)

type SubscribersControllerCreateSubscriberRequest struct {
	// If true, the request will fail if a subscriber with the same subscriberId already exists
	FailIfExists *bool `queryParam:"style=form,explode=true,name=failIfExists"`
	// A header for idempotency purposes
	IdempotencyKey             *string                               `header:"style=simple,explode=false,name=idempotency-key"`
	CreateSubscriberRequestDto components.CreateSubscriberRequestDto `request:"mediaType=application/json"`
}

func (s *SubscribersControllerCreateSubscriberRequest) GetFailIfExists() *bool {
	if s == nil {
		return nil
	}
	return s.FailIfExists
}

func (s *SubscribersControllerCreateSubscriberRequest) GetIdempotencyKey() *string {
	if s == nil {
		return nil
	}
	return s.IdempotencyKey
}

func (s *SubscribersControllerCreateSubscriberRequest) GetCreateSubscriberRequestDto() components.CreateSubscriberRequestDto {
	if s == nil {
		return components.CreateSubscriberRequestDto{}
	}
	return s.CreateSubscriberRequestDto
}

type SubscribersControllerCreateSubscriberResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Created
	SubscriberResponseDto *components.SubscriberResponseDto
	Headers               map[string][]string
}

func (s *SubscribersControllerCreateSubscriberResponse) GetHTTPMeta() components.HTTPMetadata {
	if s == nil {
		return components.HTTPMetadata{}
	}
	return s.HTTPMeta
}

func (s *SubscribersControllerCreateSubscriberResponse) GetSubscriberResponseDto() *components.SubscriberResponseDto {
	if s == nil {
		return nil
	}
	return s.SubscriberResponseDto
}

func (s *SubscribersControllerCreateSubscriberResponse) GetHeaders() map[string][]string {
	if s == nil {
		return map[string][]string{}
	}
	return s.Headers
}
