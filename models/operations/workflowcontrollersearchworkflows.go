// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/novuhq/novu-go/models/components"
)

type WorkflowControllerSearchWorkflowsRequest struct {
	// Number of items to return per page
	Limit *float64 `queryParam:"style=form,explode=true,name=limit"`
	// Number of items to skip before starting to return results
	Offset *float64 `queryParam:"style=form,explode=true,name=offset"`
	// Direction of sorting
	OrderDirection *components.DirectionEnum `queryParam:"style=form,explode=true,name=orderDirection"`
	// Field to sort the results by
	OrderBy *components.WorkflowResponseDtoSortField `queryParam:"style=form,explode=true,name=orderBy"`
	// Search query to filter workflows
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// Filter workflows by tags
	Tags []string `queryParam:"style=form,explode=true,name=tags"`
	// Filter workflows by status
	Status []components.WorkflowStatusEnum `queryParam:"style=form,explode=true,name=status"`
	// A header for idempotency purposes
	IdempotencyKey *string `header:"style=simple,explode=false,name=idempotency-key"`
}

func (o *WorkflowControllerSearchWorkflowsRequest) GetLimit() *float64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *WorkflowControllerSearchWorkflowsRequest) GetOffset() *float64 {
	if o == nil {
		return nil
	}
	return o.Offset
}

func (o *WorkflowControllerSearchWorkflowsRequest) GetOrderDirection() *components.DirectionEnum {
	if o == nil {
		return nil
	}
	return o.OrderDirection
}

func (o *WorkflowControllerSearchWorkflowsRequest) GetOrderBy() *components.WorkflowResponseDtoSortField {
	if o == nil {
		return nil
	}
	return o.OrderBy
}

func (o *WorkflowControllerSearchWorkflowsRequest) GetQuery() *string {
	if o == nil {
		return nil
	}
	return o.Query
}

func (o *WorkflowControllerSearchWorkflowsRequest) GetTags() []string {
	if o == nil {
		return nil
	}
	return o.Tags
}

func (o *WorkflowControllerSearchWorkflowsRequest) GetStatus() []components.WorkflowStatusEnum {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *WorkflowControllerSearchWorkflowsRequest) GetIdempotencyKey() *string {
	if o == nil {
		return nil
	}
	return o.IdempotencyKey
}

type WorkflowControllerSearchWorkflowsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	ListWorkflowResponse *components.ListWorkflowResponse
	Headers              map[string][]string
}

func (o *WorkflowControllerSearchWorkflowsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *WorkflowControllerSearchWorkflowsResponse) GetListWorkflowResponse() *components.ListWorkflowResponse {
	if o == nil {
		return nil
	}
	return o.ListWorkflowResponse
}

func (o *WorkflowControllerSearchWorkflowsResponse) GetHeaders() map[string][]string {
	if o == nil {
		return map[string][]string{}
	}
	return o.Headers
}
