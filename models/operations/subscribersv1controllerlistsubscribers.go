// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/novuhq/novu-go/internal/utils"
	"github.com/novuhq/novu-go/models/components"
)

type SubscribersV1ControllerListSubscribersRequest struct {
	Page  *float64 `queryParam:"style=form,explode=true,name=page"`
	Limit *float64 `default:"10" queryParam:"style=form,explode=true,name=limit"`
	// A header for idempotency purposes
	IdempotencyKey *string `header:"style=simple,explode=false,name=idempotency-key"`
}

func (s SubscribersV1ControllerListSubscribersRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SubscribersV1ControllerListSubscribersRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SubscribersV1ControllerListSubscribersRequest) GetPage() *float64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *SubscribersV1ControllerListSubscribersRequest) GetLimit() *float64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *SubscribersV1ControllerListSubscribersRequest) GetIdempotencyKey() *string {
	if o == nil {
		return nil
	}
	return o.IdempotencyKey
}

type SubscribersV1ControllerListSubscribersResponseBody struct {
	// The current page of the paginated response
	Page float64 `json:"page"`
	// Does the list have more items to fetch
	HasMore bool `json:"hasMore"`
	// Number of items on each page
	PageSize float64                            `json:"pageSize"`
	Data     []components.SubscriberResponseDto `json:"data"`
}

func (o *SubscribersV1ControllerListSubscribersResponseBody) GetPage() float64 {
	if o == nil {
		return 0.0
	}
	return o.Page
}

func (o *SubscribersV1ControllerListSubscribersResponseBody) GetHasMore() bool {
	if o == nil {
		return false
	}
	return o.HasMore
}

func (o *SubscribersV1ControllerListSubscribersResponseBody) GetPageSize() float64 {
	if o == nil {
		return 0.0
	}
	return o.PageSize
}

func (o *SubscribersV1ControllerListSubscribersResponseBody) GetData() []components.SubscriberResponseDto {
	if o == nil {
		return []components.SubscriberResponseDto{}
	}
	return o.Data
}

type SubscribersV1ControllerListSubscribersResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	Object   *SubscribersV1ControllerListSubscribersResponseBody
	Headers  map[string][]string

	Next func() (*SubscribersV1ControllerListSubscribersResponse, error)
}

func (o *SubscribersV1ControllerListSubscribersResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *SubscribersV1ControllerListSubscribersResponse) GetObject() *SubscribersV1ControllerListSubscribersResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}

func (o *SubscribersV1ControllerListSubscribersResponse) GetHeaders() map[string][]string {
	if o == nil {
		return map[string][]string{}
	}
	return o.Headers
}
