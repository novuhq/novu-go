// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/novuhq/novu-go/models/components"
)

// QueryParamOrderDirection - Direction of sorting
type QueryParamOrderDirection string

const (
	QueryParamOrderDirectionAsc  QueryParamOrderDirection = "ASC"
	QueryParamOrderDirectionDesc QueryParamOrderDirection = "DESC"
)

func (e QueryParamOrderDirection) ToPointer() *QueryParamOrderDirection {
	return &e
}
func (e *QueryParamOrderDirection) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ASC":
		fallthrough
	case "DESC":
		*e = QueryParamOrderDirection(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryParamOrderDirection: %v", v)
	}
}

type SubscribersControllerListSubscriberTopicsRequest struct {
	// The identifier of the subscriber
	SubscriberID string `pathParam:"style=simple,explode=false,name=subscriberId"`
	// Cursor for pagination indicating the starting point after which to fetch results.
	After *string `queryParam:"style=form,explode=true,name=after"`
	// Cursor for pagination indicating the ending point before which to fetch results.
	Before *string `queryParam:"style=form,explode=true,name=before"`
	// Limit the number of items to return (max 100)
	Limit *float64 `queryParam:"style=form,explode=true,name=limit"`
	// Direction of sorting
	OrderDirection *QueryParamOrderDirection `queryParam:"style=form,explode=true,name=orderDirection"`
	// Field to order by
	OrderBy *string `queryParam:"style=form,explode=true,name=orderBy"`
	// Include cursor item in response
	IncludeCursor *bool `queryParam:"style=form,explode=true,name=includeCursor"`
	// Filter by topic key
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// A header for idempotency purposes
	IdempotencyKey *string `header:"style=simple,explode=false,name=idempotency-key"`
}

func (o *SubscribersControllerListSubscriberTopicsRequest) GetSubscriberID() string {
	if o == nil {
		return ""
	}
	return o.SubscriberID
}

func (o *SubscribersControllerListSubscriberTopicsRequest) GetAfter() *string {
	if o == nil {
		return nil
	}
	return o.After
}

func (o *SubscribersControllerListSubscriberTopicsRequest) GetBefore() *string {
	if o == nil {
		return nil
	}
	return o.Before
}

func (o *SubscribersControllerListSubscriberTopicsRequest) GetLimit() *float64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *SubscribersControllerListSubscriberTopicsRequest) GetOrderDirection() *QueryParamOrderDirection {
	if o == nil {
		return nil
	}
	return o.OrderDirection
}

func (o *SubscribersControllerListSubscriberTopicsRequest) GetOrderBy() *string {
	if o == nil {
		return nil
	}
	return o.OrderBy
}

func (o *SubscribersControllerListSubscriberTopicsRequest) GetIncludeCursor() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeCursor
}

func (o *SubscribersControllerListSubscriberTopicsRequest) GetKey() *string {
	if o == nil {
		return nil
	}
	return o.Key
}

func (o *SubscribersControllerListSubscriberTopicsRequest) GetIdempotencyKey() *string {
	if o == nil {
		return nil
	}
	return o.IdempotencyKey
}

type SubscribersControllerListSubscriberTopicsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	ListTopicSubscriptionsResponseDto *components.ListTopicSubscriptionsResponseDto
	Headers                           map[string][]string
}

func (o *SubscribersControllerListSubscriberTopicsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *SubscribersControllerListSubscriberTopicsResponse) GetListTopicSubscriptionsResponseDto() *components.ListTopicSubscriptionsResponseDto {
	if o == nil {
		return nil
	}
	return o.ListTopicSubscriptionsResponseDto
}

func (o *SubscribersControllerListSubscriberTopicsResponse) GetHeaders() map[string][]string {
	if o == nil {
		return map[string][]string{}
	}
	return o.Headers
}
