// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/novuhq/novu-go/internal/utils"
	"github.com/novuhq/novu-go/models/components"
)

type SubscribersV1ControllerGetUnseenCountRequest struct {
	SubscriberID string `pathParam:"style=simple,explode=false,name=subscriberId"`
	// Indicates whether to count seen notifications.
	Seen *bool `default:"false" queryParam:"style=form,explode=true,name=seen"`
	// The maximum number of notifications to return.
	Limit *float64 `default:"100" queryParam:"style=form,explode=true,name=limit"`
	// A header for idempotency purposes
	IdempotencyKey *string `header:"style=simple,explode=false,name=idempotency-key"`
}

func (s SubscribersV1ControllerGetUnseenCountRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SubscribersV1ControllerGetUnseenCountRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SubscribersV1ControllerGetUnseenCountRequest) GetSubscriberID() string {
	if o == nil {
		return ""
	}
	return o.SubscriberID
}

func (o *SubscribersV1ControllerGetUnseenCountRequest) GetSeen() *bool {
	if o == nil {
		return nil
	}
	return o.Seen
}

func (o *SubscribersV1ControllerGetUnseenCountRequest) GetLimit() *float64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *SubscribersV1ControllerGetUnseenCountRequest) GetIdempotencyKey() *string {
	if o == nil {
		return nil
	}
	return o.IdempotencyKey
}

type SubscribersV1ControllerGetUnseenCountResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	UnseenCountResponse *components.UnseenCountResponse
	Headers             map[string][]string
}

func (o *SubscribersV1ControllerGetUnseenCountResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *SubscribersV1ControllerGetUnseenCountResponse) GetUnseenCountResponse() *components.UnseenCountResponse {
	if o == nil {
		return nil
	}
	return o.UnseenCountResponse
}

func (o *SubscribersV1ControllerGetUnseenCountResponse) GetHeaders() map[string][]string {
	if o == nil {
		return map[string][]string{}
	}
	return o.Headers
}
