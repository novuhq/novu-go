// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/novuhq/novu-go/models/components"
)

type WorkflowControllerGetWorkflowStepDataRequest struct {
	WorkflowID string `pathParam:"style=simple,explode=false,name=workflowId"`
	StepID     string `pathParam:"style=simple,explode=false,name=stepId"`
	// A header for idempotency purposes
	IdempotencyKey *string `header:"style=simple,explode=false,name=idempotency-key"`
}

func (w *WorkflowControllerGetWorkflowStepDataRequest) GetWorkflowID() string {
	if w == nil {
		return ""
	}
	return w.WorkflowID
}

func (w *WorkflowControllerGetWorkflowStepDataRequest) GetStepID() string {
	if w == nil {
		return ""
	}
	return w.StepID
}

func (w *WorkflowControllerGetWorkflowStepDataRequest) GetIdempotencyKey() *string {
	if w == nil {
		return nil
	}
	return w.IdempotencyKey
}

type WorkflowControllerGetWorkflowStepDataResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	StepResponseDto *components.StepResponseDto
	Headers         map[string][]string
}

func (w *WorkflowControllerGetWorkflowStepDataResponse) GetHTTPMeta() components.HTTPMetadata {
	if w == nil {
		return components.HTTPMetadata{}
	}
	return w.HTTPMeta
}

func (w *WorkflowControllerGetWorkflowStepDataResponse) GetStepResponseDto() *components.StepResponseDto {
	if w == nil {
		return nil
	}
	return w.StepResponseDto
}

func (w *WorkflowControllerGetWorkflowStepDataResponse) GetHeaders() map[string][]string {
	if w == nil {
		return map[string][]string{}
	}
	return w.Headers
}
