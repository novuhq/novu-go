// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/novuhq/novu-go/models/components"
)

type TopicsV1ControllerGetTopicSubscriberRequest struct {
	// The external subscriber id
	ExternalSubscriberID string `pathParam:"style=simple,explode=false,name=externalSubscriberId"`
	// The topic key
	TopicKey string `pathParam:"style=simple,explode=false,name=topicKey"`
	// A header for idempotency purposes
	IdempotencyKey *string `header:"style=simple,explode=false,name=idempotency-key"`
}

func (t *TopicsV1ControllerGetTopicSubscriberRequest) GetExternalSubscriberID() string {
	if t == nil {
		return ""
	}
	return t.ExternalSubscriberID
}

func (t *TopicsV1ControllerGetTopicSubscriberRequest) GetTopicKey() string {
	if t == nil {
		return ""
	}
	return t.TopicKey
}

func (t *TopicsV1ControllerGetTopicSubscriberRequest) GetIdempotencyKey() *string {
	if t == nil {
		return nil
	}
	return t.IdempotencyKey
}

type TopicsV1ControllerGetTopicSubscriberResponse struct {
	HTTPMeta           components.HTTPMetadata `json:"-"`
	TopicSubscriberDto *components.TopicSubscriberDto
	Headers            map[string][]string
}

func (t *TopicsV1ControllerGetTopicSubscriberResponse) GetHTTPMeta() components.HTTPMetadata {
	if t == nil {
		return components.HTTPMetadata{}
	}
	return t.HTTPMeta
}

func (t *TopicsV1ControllerGetTopicSubscriberResponse) GetTopicSubscriberDto() *components.TopicSubscriberDto {
	if t == nil {
		return nil
	}
	return t.TopicSubscriberDto
}

func (t *TopicsV1ControllerGetTopicSubscriberResponse) GetHeaders() map[string][]string {
	if t == nil {
		return map[string][]string{}
	}
	return t.Headers
}
