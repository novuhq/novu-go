// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/novuhq/novu-go/models/components"
)

type TopicsControllerAssignRequest struct {
	// The topic key
	TopicKey string `pathParam:"style=simple,explode=false,name=topicKey"`
	// A header for idempotency purposes
	IdempotencyKey           *string                             `header:"style=simple,explode=false,name=idempotency-key"`
	AddSubscribersRequestDto components.AddSubscribersRequestDto `request:"mediaType=application/json"`
}

func (o *TopicsControllerAssignRequest) GetTopicKey() string {
	if o == nil {
		return ""
	}
	return o.TopicKey
}

func (o *TopicsControllerAssignRequest) GetIdempotencyKey() *string {
	if o == nil {
		return nil
	}
	return o.IdempotencyKey
}

func (o *TopicsControllerAssignRequest) GetAddSubscribersRequestDto() components.AddSubscribersRequestDto {
	if o == nil {
		return components.AddSubscribersRequestDto{}
	}
	return o.AddSubscribersRequestDto
}

type TopicsControllerAssignResponse struct {
	HTTPMeta                   components.HTTPMetadata `json:"-"`
	AssignSubscriberToTopicDto *components.AssignSubscriberToTopicDto
	Headers                    map[string][]string
}

func (o *TopicsControllerAssignResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *TopicsControllerAssignResponse) GetAssignSubscriberToTopicDto() *components.AssignSubscriberToTopicDto {
	if o == nil {
		return nil
	}
	return o.AssignSubscriberToTopicDto
}

func (o *TopicsControllerAssignResponse) GetHeaders() map[string][]string {
	if o == nil {
		return map[string][]string{}
	}
	return o.Headers
}
