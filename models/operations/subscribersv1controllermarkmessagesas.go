// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/novuhq/novu-go/models/components"
)

type SubscribersV1ControllerMarkMessagesAsRequest struct {
	SubscriberID string `pathParam:"style=simple,explode=false,name=subscriberId"`
	// A header for idempotency purposes
	IdempotencyKey          *string                            `header:"style=simple,explode=false,name=idempotency-key"`
	MessageMarkAsRequestDto components.MessageMarkAsRequestDto `request:"mediaType=application/json"`
}

func (o *SubscribersV1ControllerMarkMessagesAsRequest) GetSubscriberID() string {
	if o == nil {
		return ""
	}
	return o.SubscriberID
}

func (o *SubscribersV1ControllerMarkMessagesAsRequest) GetIdempotencyKey() *string {
	if o == nil {
		return nil
	}
	return o.IdempotencyKey
}

func (o *SubscribersV1ControllerMarkMessagesAsRequest) GetMessageMarkAsRequestDto() components.MessageMarkAsRequestDto {
	if o == nil {
		return components.MessageMarkAsRequestDto{}
	}
	return o.MessageMarkAsRequestDto
}

type SubscribersV1ControllerMarkMessagesAsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Created
	MessageResponseDtos []components.MessageResponseDto
	Headers             map[string][]string
}

func (o *SubscribersV1ControllerMarkMessagesAsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *SubscribersV1ControllerMarkMessagesAsResponse) GetMessageResponseDtos() []components.MessageResponseDto {
	if o == nil {
		return nil
	}
	return o.MessageResponseDtos
}

func (o *SubscribersV1ControllerMarkMessagesAsResponse) GetHeaders() map[string][]string {
	if o == nil {
		return map[string][]string{}
	}
	return o.Headers
}
