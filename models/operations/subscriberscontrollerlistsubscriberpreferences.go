// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/novuhq/novu-go/models/components"
)

type SubscribersControllerListSubscriberPreferencesRequest struct {
	SubscriberID string `pathParam:"style=simple,explode=false,name=subscriberId"`
	// A flag which specifies if the inactive workflow channels should be included in the retrieved preferences. Default is true
	IncludeInactiveChannels *bool `queryParam:"style=form,explode=true,name=includeInactiveChannels"`
}

func (o *SubscribersControllerListSubscriberPreferencesRequest) GetSubscriberID() string {
	if o == nil {
		return ""
	}
	return o.SubscriberID
}

func (o *SubscribersControllerListSubscriberPreferencesRequest) GetIncludeInactiveChannels() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeInactiveChannels
}

type SubscribersControllerListSubscriberPreferencesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	UpdateSubscriberPreferenceResponseDtos []components.UpdateSubscriberPreferenceResponseDto
	Headers                                map[string][]string
}

func (o *SubscribersControllerListSubscriberPreferencesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *SubscribersControllerListSubscriberPreferencesResponse) GetUpdateSubscriberPreferenceResponseDtos() []components.UpdateSubscriberPreferenceResponseDto {
	if o == nil {
		return nil
	}
	return o.UpdateSubscriberPreferenceResponseDtos
}

func (o *SubscribersControllerListSubscriberPreferencesResponse) GetHeaders() map[string][]string {
	if o == nil {
		return map[string][]string{}
	}
	return o.Headers
}
