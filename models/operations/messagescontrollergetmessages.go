// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/novuhq/novu-go/internal/utils"
	"github.com/novuhq/novu-go/models/components"
)

type MessagesControllerGetMessagesRequest struct {
	// Channel type through which the message is sent
	Channel       *components.ChannelTypeEnum `queryParam:"style=form,explode=true,name=channel"`
	SubscriberID  *string                     `queryParam:"style=form,explode=true,name=subscriberId"`
	TransactionID []string                    `queryParam:"style=form,explode=true,name=transactionId"`
	Page          *float64                    `default:"0" queryParam:"style=form,explode=true,name=page"`
	Limit         *float64                    `default:"10" queryParam:"style=form,explode=true,name=limit"`
}

func (m MessagesControllerGetMessagesRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MessagesControllerGetMessagesRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MessagesControllerGetMessagesRequest) GetChannel() *components.ChannelTypeEnum {
	if o == nil {
		return nil
	}
	return o.Channel
}

func (o *MessagesControllerGetMessagesRequest) GetSubscriberID() *string {
	if o == nil {
		return nil
	}
	return o.SubscriberID
}

func (o *MessagesControllerGetMessagesRequest) GetTransactionID() []string {
	if o == nil {
		return nil
	}
	return o.TransactionID
}

func (o *MessagesControllerGetMessagesRequest) GetPage() *float64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *MessagesControllerGetMessagesRequest) GetLimit() *float64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

type MessagesControllerGetMessagesResponse struct {
	HTTPMeta              components.HTTPMetadata `json:"-"`
	ActivitiesResponseDto *components.ActivitiesResponseDto
	Headers               map[string][]string
}

func (o *MessagesControllerGetMessagesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *MessagesControllerGetMessagesResponse) GetActivitiesResponseDto() *components.ActivitiesResponseDto {
	if o == nil {
		return nil
	}
	return o.ActivitiesResponseDto
}

func (o *MessagesControllerGetMessagesResponse) GetHeaders() map[string][]string {
	if o == nil {
		return map[string][]string{}
	}
	return o.Headers
}
