// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/novuhq/novu-go/models/components"
)

type IntegrationsControllerGetWebhookSupportStatusRequest struct {
	ProviderOrIntegrationID string `pathParam:"style=simple,explode=false,name=providerOrIntegrationId"`
	// A header for idempotency purposes
	IdempotencyKey *string `header:"style=simple,explode=false,name=idempotency-key"`
}

func (o *IntegrationsControllerGetWebhookSupportStatusRequest) GetProviderOrIntegrationID() string {
	if o == nil {
		return ""
	}
	return o.ProviderOrIntegrationID
}

func (o *IntegrationsControllerGetWebhookSupportStatusRequest) GetIdempotencyKey() *string {
	if o == nil {
		return nil
	}
	return o.IdempotencyKey
}

type IntegrationsControllerGetWebhookSupportStatusResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The status of the webhook for the provider requested
	Boolean *bool
	Headers map[string][]string
}

func (o *IntegrationsControllerGetWebhookSupportStatusResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *IntegrationsControllerGetWebhookSupportStatusResponse) GetBoolean() *bool {
	if o == nil {
		return nil
	}
	return o.Boolean
}

func (o *IntegrationsControllerGetWebhookSupportStatusResponse) GetHeaders() map[string][]string {
	if o == nil {
		return map[string][]string{}
	}
	return o.Headers
}
