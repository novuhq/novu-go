// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/novuhq/novu-go/models/components"
)

type SubscribersControllerUpdateSubscriberPreferenceRequest struct {
	SubscriberID                         string                                          `pathParam:"style=simple,explode=false,name=subscriberId"`
	WorkflowID                           string                                          `pathParam:"style=simple,explode=false,name=parameter"`
	UpdateSubscriberPreferenceRequestDto components.UpdateSubscriberPreferenceRequestDto `request:"mediaType=application/json"`
}

func (o *SubscribersControllerUpdateSubscriberPreferenceRequest) GetSubscriberID() string {
	if o == nil {
		return ""
	}
	return o.SubscriberID
}

func (o *SubscribersControllerUpdateSubscriberPreferenceRequest) GetWorkflowID() string {
	if o == nil {
		return ""
	}
	return o.WorkflowID
}

func (o *SubscribersControllerUpdateSubscriberPreferenceRequest) GetUpdateSubscriberPreferenceRequestDto() components.UpdateSubscriberPreferenceRequestDto {
	if o == nil {
		return components.UpdateSubscriberPreferenceRequestDto{}
	}
	return o.UpdateSubscriberPreferenceRequestDto
}

type SubscribersControllerUpdateSubscriberPreferenceResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	UpdateSubscriberPreferenceResponseDto *components.UpdateSubscriberPreferenceResponseDto
	Headers                               map[string][]string
}

func (o *SubscribersControllerUpdateSubscriberPreferenceResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *SubscribersControllerUpdateSubscriberPreferenceResponse) GetUpdateSubscriberPreferenceResponseDto() *components.UpdateSubscriberPreferenceResponseDto {
	if o == nil {
		return nil
	}
	return o.UpdateSubscriberPreferenceResponseDto
}

func (o *SubscribersControllerUpdateSubscriberPreferenceResponse) GetHeaders() map[string][]string {
	if o == nil {
		return map[string][]string{}
	}
	return o.Headers
}
