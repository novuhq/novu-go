// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/novuhq/novu-go/models/components"
)

// Channel - The channel of the message to be deleted
type Channel string

const (
	ChannelInApp Channel = "in_app"
	ChannelEmail Channel = "email"
	ChannelSms   Channel = "sms"
	ChannelChat  Channel = "chat"
	ChannelPush  Channel = "push"
)

func (e Channel) ToPointer() *Channel {
	return &e
}
func (e *Channel) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "in_app":
		fallthrough
	case "email":
		fallthrough
	case "sms":
		fallthrough
	case "chat":
		fallthrough
	case "push":
		*e = Channel(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Channel: %v", v)
	}
}

type MessagesControllerDeleteMessagesByTransactionIDRequest struct {
	// The channel of the message to be deleted
	Channel       *Channel `queryParam:"style=form,explode=true,name=channel"`
	TransactionID string   `pathParam:"style=simple,explode=false,name=transactionId"`
	// A header for idempotency purposes
	IdempotencyKey *string `header:"style=simple,explode=false,name=idempotency-key"`
}

func (m *MessagesControllerDeleteMessagesByTransactionIDRequest) GetChannel() *Channel {
	if m == nil {
		return nil
	}
	return m.Channel
}

func (m *MessagesControllerDeleteMessagesByTransactionIDRequest) GetTransactionID() string {
	if m == nil {
		return ""
	}
	return m.TransactionID
}

func (m *MessagesControllerDeleteMessagesByTransactionIDRequest) GetIdempotencyKey() *string {
	if m == nil {
		return nil
	}
	return m.IdempotencyKey
}

type MessagesControllerDeleteMessagesByTransactionIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	Headers  map[string][]string
}

func (m *MessagesControllerDeleteMessagesByTransactionIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if m == nil {
		return components.HTTPMetadata{}
	}
	return m.HTTPMeta
}

func (m *MessagesControllerDeleteMessagesByTransactionIDResponse) GetHeaders() map[string][]string {
	if m == nil {
		return map[string][]string{}
	}
	return m.Headers
}
