// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// ExecutionDetailsStatusEnum - Status of the execution detail
type ExecutionDetailsStatusEnum string

const (
	ExecutionDetailsStatusEnumSuccess          ExecutionDetailsStatusEnum = "Success"
	ExecutionDetailsStatusEnumWarning          ExecutionDetailsStatusEnum = "Warning"
	ExecutionDetailsStatusEnumFailed           ExecutionDetailsStatusEnum = "Failed"
	ExecutionDetailsStatusEnumPending          ExecutionDetailsStatusEnum = "Pending"
	ExecutionDetailsStatusEnumQueued           ExecutionDetailsStatusEnum = "Queued"
	ExecutionDetailsStatusEnumReadConfirmation ExecutionDetailsStatusEnum = "ReadConfirmation"
)

func (e ExecutionDetailsStatusEnum) ToPointer() *ExecutionDetailsStatusEnum {
	return &e
}
func (e *ExecutionDetailsStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Success":
		fallthrough
	case "Warning":
		fallthrough
	case "Failed":
		fallthrough
	case "Pending":
		fallthrough
	case "Queued":
		fallthrough
	case "ReadConfirmation":
		*e = ExecutionDetailsStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExecutionDetailsStatusEnum: %v", v)
	}
}
