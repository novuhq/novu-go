// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// Subscriber - The subscriber information
type Subscriber struct {
	// The identifier of the subscriber
	ID string `json:"_id"`
	// The external identifier of the subscriber
	SubscriberID string `json:"subscriberId"`
	// The avatar URL of the subscriber
	Avatar *string `json:"avatar,omitempty"`
	// The first name of the subscriber
	FirstName *string `json:"firstName,omitempty"`
	// The last name of the subscriber
	LastName *string `json:"lastName,omitempty"`
	// The email of the subscriber
	Email *string `json:"email,omitempty"`
}

func (s *Subscriber) GetID() string {
	if s == nil {
		return ""
	}
	return s.ID
}

func (s *Subscriber) GetSubscriberID() string {
	if s == nil {
		return ""
	}
	return s.SubscriberID
}

func (s *Subscriber) GetAvatar() *string {
	if s == nil {
		return nil
	}
	return s.Avatar
}

func (s *Subscriber) GetFirstName() *string {
	if s == nil {
		return nil
	}
	return s.FirstName
}

func (s *Subscriber) GetLastName() *string {
	if s == nil {
		return nil
	}
	return s.LastName
}

func (s *Subscriber) GetEmail() *string {
	if s == nil {
		return nil
	}
	return s.Email
}

type SubscriptionDto struct {
	// The unique identifier of the subscription
	ID string `json:"_id"`
	// The topic information
	Topic TopicDto `json:"topic"`
	// The subscriber information
	Subscriber *Subscriber `json:"subscriber"`
	// The creation date of the subscription
	CreatedAt string `json:"createdAt"`
	// The last update date of the subscription
	UpdatedAt string `json:"updatedAt"`
}

func (s *SubscriptionDto) GetID() string {
	if s == nil {
		return ""
	}
	return s.ID
}

func (s *SubscriptionDto) GetTopic() TopicDto {
	if s == nil {
		return TopicDto{}
	}
	return s.Topic
}

func (s *SubscriptionDto) GetSubscriber() *Subscriber {
	if s == nil {
		return nil
	}
	return s.Subscriber
}

func (s *SubscriptionDto) GetCreatedAt() string {
	if s == nil {
		return ""
	}
	return s.CreatedAt
}

func (s *SubscriptionDto) GetUpdatedAt() string {
	if s == nil {
		return ""
	}
	return s.UpdatedAt
}
