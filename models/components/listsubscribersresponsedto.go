// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type ListSubscribersResponseDto struct {
	// List of returned Subscribers
	Data []SubscriberResponseDto `json:"data"`
	// The cursor for the next page of results, or null if there are no more pages.
	Next *string `json:"next"`
	// The cursor for the previous page of results, or null if this is the first page.
	Previous *string `json:"previous"`
	// The total count of items (up to 50,000)
	TotalCount float64 `json:"totalCount"`
	// Whether there are more than 50,000 results available
	TotalCountCapped bool `json:"totalCountCapped"`
}

func (l *ListSubscribersResponseDto) GetData() []SubscriberResponseDto {
	if l == nil {
		return []SubscriberResponseDto{}
	}
	return l.Data
}

func (l *ListSubscribersResponseDto) GetNext() *string {
	if l == nil {
		return nil
	}
	return l.Next
}

func (l *ListSubscribersResponseDto) GetPrevious() *string {
	if l == nil {
		return nil
	}
	return l.Previous
}

func (l *ListSubscribersResponseDto) GetTotalCount() float64 {
	if l == nil {
		return 0.0
	}
	return l.TotalCount
}

func (l *ListSubscribersResponseDto) GetTotalCountCapped() bool {
	if l == nil {
		return false
	}
	return l.TotalCountCapped
}
