// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// NotificationTriggerVariableResponseValue - The value of the variable
type NotificationTriggerVariableResponseValue struct {
}

// NotificationTriggerVariableResponseType - The type of the variable
type NotificationTriggerVariableResponseType string

const (
	NotificationTriggerVariableResponseTypeString  NotificationTriggerVariableResponseType = "String"
	NotificationTriggerVariableResponseTypeArray   NotificationTriggerVariableResponseType = "Array"
	NotificationTriggerVariableResponseTypeBoolean NotificationTriggerVariableResponseType = "Boolean"
)

func (e NotificationTriggerVariableResponseType) ToPointer() *NotificationTriggerVariableResponseType {
	return &e
}
func (e *NotificationTriggerVariableResponseType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "String":
		fallthrough
	case "Array":
		fallthrough
	case "Boolean":
		*e = NotificationTriggerVariableResponseType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NotificationTriggerVariableResponseType: %v", v)
	}
}

type NotificationTriggerVariableResponse struct {
	// The name of the variable
	Name string `json:"name"`
	// The value of the variable
	Value *NotificationTriggerVariableResponseValue `json:"value,omitempty"`
	// The type of the variable
	Type *NotificationTriggerVariableResponseType `json:"type,omitempty"`
}

func (o *NotificationTriggerVariableResponse) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *NotificationTriggerVariableResponse) GetValue() *NotificationTriggerVariableResponseValue {
	if o == nil {
		return nil
	}
	return o.Value
}

func (o *NotificationTriggerVariableResponse) GetType() *NotificationTriggerVariableResponseType {
	if o == nil {
		return nil
	}
	return o.Type
}
