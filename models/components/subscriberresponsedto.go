// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type SubscriberResponseDto struct {
	// The internal ID generated by Novu for your subscriber. This ID does not match the `subscriberId` used in your queries. Refer to `subscriberId` for that identifier.
	ID *string `json:"_id,omitempty"`
	// The first name of the subscriber.
	FirstName *string `json:"firstName,omitempty"`
	// The last name of the subscriber.
	LastName *string `json:"lastName,omitempty"`
	// The email address of the subscriber.
	Email *string `json:"email,omitempty"`
	// The phone number of the subscriber.
	Phone *string `json:"phone,omitempty"`
	// The URL of the subscriber's avatar image.
	Avatar *string `json:"avatar,omitempty"`
	// The locale setting of the subscriber, indicating their preferred language or region.
	Locale *string `json:"locale,omitempty"`
	// An array of channel settings associated with the subscriber.
	Channels []ChannelSettingsDto `json:"channels,omitempty"`
	// An array of topics that the subscriber is subscribed to.
	//
	// Deprecated: This will be removed in a future release, please migrate away from it as soon as possible.
	Topics []string `json:"topics,omitempty"`
	// Indicates whether the subscriber is currently online.
	IsOnline *bool `json:"isOnline,omitempty"`
	// The timestamp indicating when the subscriber was last online, in ISO 8601 format.
	LastOnlineAt *string `json:"lastOnlineAt,omitempty"`
	// The version of the subscriber document.
	V *float64 `json:"__v,omitempty"`
	// Additional custom data for the subscriber
	Data map[string]any `json:"data,omitempty"`
	// Timezone of the subscriber
	Timezone *string `json:"timezone,omitempty"`
	// The identifier used to create this subscriber, which typically corresponds to the user ID in your system.
	SubscriberID string `json:"subscriberId"`
	// The unique identifier of the organization to which the subscriber belongs.
	OrganizationID string `json:"_organizationId"`
	// The unique identifier of the environment associated with this subscriber.
	EnvironmentID string `json:"_environmentId"`
	// Indicates whether the subscriber has been deleted.
	Deleted bool `json:"deleted"`
	// The timestamp indicating when the subscriber was created, in ISO 8601 format.
	CreatedAt string `json:"createdAt"`
	// The timestamp indicating when the subscriber was last updated, in ISO 8601 format.
	UpdatedAt string `json:"updatedAt"`
}

func (o *SubscriberResponseDto) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *SubscriberResponseDto) GetFirstName() *string {
	if o == nil {
		return nil
	}
	return o.FirstName
}

func (o *SubscriberResponseDto) GetLastName() *string {
	if o == nil {
		return nil
	}
	return o.LastName
}

func (o *SubscriberResponseDto) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *SubscriberResponseDto) GetPhone() *string {
	if o == nil {
		return nil
	}
	return o.Phone
}

func (o *SubscriberResponseDto) GetAvatar() *string {
	if o == nil {
		return nil
	}
	return o.Avatar
}

func (o *SubscriberResponseDto) GetLocale() *string {
	if o == nil {
		return nil
	}
	return o.Locale
}

func (o *SubscriberResponseDto) GetChannels() []ChannelSettingsDto {
	if o == nil {
		return nil
	}
	return o.Channels
}

func (o *SubscriberResponseDto) GetTopics() []string {
	if o == nil {
		return nil
	}
	return o.Topics
}

func (o *SubscriberResponseDto) GetIsOnline() *bool {
	if o == nil {
		return nil
	}
	return o.IsOnline
}

func (o *SubscriberResponseDto) GetLastOnlineAt() *string {
	if o == nil {
		return nil
	}
	return o.LastOnlineAt
}

func (o *SubscriberResponseDto) GetV() *float64 {
	if o == nil {
		return nil
	}
	return o.V
}

func (o *SubscriberResponseDto) GetData() map[string]any {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *SubscriberResponseDto) GetTimezone() *string {
	if o == nil {
		return nil
	}
	return o.Timezone
}

func (o *SubscriberResponseDto) GetSubscriberID() string {
	if o == nil {
		return ""
	}
	return o.SubscriberID
}

func (o *SubscriberResponseDto) GetOrganizationID() string {
	if o == nil {
		return ""
	}
	return o.OrganizationID
}

func (o *SubscriberResponseDto) GetEnvironmentID() string {
	if o == nil {
		return ""
	}
	return o.EnvironmentID
}

func (o *SubscriberResponseDto) GetDeleted() bool {
	if o == nil {
		return false
	}
	return o.Deleted
}

func (o *SubscriberResponseDto) GetCreatedAt() string {
	if o == nil {
		return ""
	}
	return o.CreatedAt
}

func (o *SubscriberResponseDto) GetUpdatedAt() string {
	if o == nil {
		return ""
	}
	return o.UpdatedAt
}
