// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// OrdinalValueEnum - Value of the ordinal
type OrdinalValueEnum string

const (
	OrdinalValueEnumDay       OrdinalValueEnum = "day"
	OrdinalValueEnumWeekday   OrdinalValueEnum = "weekday"
	OrdinalValueEnumWeekend   OrdinalValueEnum = "weekend"
	OrdinalValueEnumSunday    OrdinalValueEnum = "sunday"
	OrdinalValueEnumMonday    OrdinalValueEnum = "monday"
	OrdinalValueEnumTuesday   OrdinalValueEnum = "tuesday"
	OrdinalValueEnumWednesday OrdinalValueEnum = "wednesday"
	OrdinalValueEnumThursday  OrdinalValueEnum = "thursday"
	OrdinalValueEnumFriday    OrdinalValueEnum = "friday"
	OrdinalValueEnumSaturday  OrdinalValueEnum = "saturday"
)

func (e OrdinalValueEnum) ToPointer() *OrdinalValueEnum {
	return &e
}
func (e *OrdinalValueEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "day":
		fallthrough
	case "weekday":
		fallthrough
	case "weekend":
		fallthrough
	case "sunday":
		fallthrough
	case "monday":
		fallthrough
	case "tuesday":
		fallthrough
	case "wednesday":
		fallthrough
	case "thursday":
		fallthrough
	case "friday":
		fallthrough
	case "saturday":
		*e = OrdinalValueEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OrdinalValueEnum: %v", v)
	}
}
