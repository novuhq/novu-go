// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// EnvironmentResponseDtoType - Type of the environment
type EnvironmentResponseDtoType string

const (
	EnvironmentResponseDtoTypeDev  EnvironmentResponseDtoType = "dev"
	EnvironmentResponseDtoTypeProd EnvironmentResponseDtoType = "prod"
)

func (e EnvironmentResponseDtoType) ToPointer() *EnvironmentResponseDtoType {
	return &e
}
func (e *EnvironmentResponseDtoType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "dev":
		fallthrough
	case "prod":
		*e = EnvironmentResponseDtoType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EnvironmentResponseDtoType: %v", v)
	}
}

type EnvironmentResponseDto struct {
	// Unique identifier of the environment
	ID string `json:"_id"`
	// Name of the environment
	Name string `json:"name"`
	// Organization ID associated with the environment
	OrganizationID string `json:"_organizationId"`
	// Unique identifier for the environment
	Identifier string `json:"identifier"`
	// Type of the environment
	Type *EnvironmentResponseDtoType `json:"type,omitempty"`
	// List of API keys associated with the environment
	APIKeys []APIKeyDto `json:"apiKeys,omitempty"`
	// Parent environment ID
	ParentID *string `json:"_parentId,omitempty"`
	// URL-friendly slug for the environment
	Slug *string `json:"slug,omitempty"`
}

func (e *EnvironmentResponseDto) GetID() string {
	if e == nil {
		return ""
	}
	return e.ID
}

func (e *EnvironmentResponseDto) GetName() string {
	if e == nil {
		return ""
	}
	return e.Name
}

func (e *EnvironmentResponseDto) GetOrganizationID() string {
	if e == nil {
		return ""
	}
	return e.OrganizationID
}

func (e *EnvironmentResponseDto) GetIdentifier() string {
	if e == nil {
		return ""
	}
	return e.Identifier
}

func (e *EnvironmentResponseDto) GetType() *EnvironmentResponseDtoType {
	if e == nil {
		return nil
	}
	return e.Type
}

func (e *EnvironmentResponseDto) GetAPIKeys() []APIKeyDto {
	if e == nil {
		return nil
	}
	return e.APIKeys
}

func (e *EnvironmentResponseDto) GetParentID() *string {
	if e == nil {
		return nil
	}
	return e.ParentID
}

func (e *EnvironmentResponseDto) GetSlug() *string {
	if e == nil {
		return nil
	}
	return e.Slug
}
