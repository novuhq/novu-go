// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/novuhq/novu-go/internal/utils"
)

// EmailControlDtoEditorType - Type of editor to use for the body.
type EmailControlDtoEditorType string

const (
	EmailControlDtoEditorTypeBlock EmailControlDtoEditorType = "block"
	EmailControlDtoEditorTypeHTML  EmailControlDtoEditorType = "html"
)

func (e EmailControlDtoEditorType) ToPointer() *EmailControlDtoEditorType {
	return &e
}
func (e *EmailControlDtoEditorType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "block":
		fallthrough
	case "html":
		*e = EmailControlDtoEditorType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EmailControlDtoEditorType: %v", v)
	}
}

type EmailControlDto struct {
	// JSONLogic filter conditions for conditionally skipping the step execution. Supports complex logical operations with AND, OR, and comparison operators. See https://jsonlogic.com/ for full typing reference.
	Skip map[string]any `json:"skip,omitempty"`
	// Subject of the email.
	Subject string `json:"subject"`
	// Body content of the email, either a valid Maily JSON object, or html string.
	Body *string `default:"" json:"body"`
	// Type of editor to use for the body.
	EditorType *EmailControlDtoEditorType `default:"block" json:"editorType"`
	// Disable sanitization of the output.
	DisableOutputSanitization *bool `default:"false" json:"disableOutputSanitization"`
	// Layout ID to use for the email. Null means no layout, undefined means default layout.
	LayoutID *string `json:"layoutId,omitempty"`
}

func (e EmailControlDto) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *EmailControlDto) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, []string{"subject"}); err != nil {
		return err
	}
	return nil
}

func (e *EmailControlDto) GetSkip() map[string]any {
	if e == nil {
		return nil
	}
	return e.Skip
}

func (e *EmailControlDto) GetSubject() string {
	if e == nil {
		return ""
	}
	return e.Subject
}

func (e *EmailControlDto) GetBody() *string {
	if e == nil {
		return nil
	}
	return e.Body
}

func (e *EmailControlDto) GetEditorType() *EmailControlDtoEditorType {
	if e == nil {
		return nil
	}
	return e.EditorType
}

func (e *EmailControlDto) GetDisableOutputSanitization() *bool {
	if e == nil {
		return nil
	}
	return e.DisableOutputSanitization
}

func (e *EmailControlDto) GetLayoutID() *string {
	if e == nil {
		return nil
	}
	return e.LayoutID
}
