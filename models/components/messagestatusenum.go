// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// MessageStatusEnum - Status of the message
type MessageStatusEnum string

const (
	MessageStatusEnumSent    MessageStatusEnum = "sent"
	MessageStatusEnumError   MessageStatusEnum = "error"
	MessageStatusEnumWarning MessageStatusEnum = "warning"
)

func (e MessageStatusEnum) ToPointer() *MessageStatusEnum {
	return &e
}
func (e *MessageStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "sent":
		fallthrough
	case "error":
		fallthrough
	case "warning":
		*e = MessageStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MessageStatusEnum: %v", v)
	}
}
