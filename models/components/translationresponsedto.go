// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// TranslationResponseDtoResourceType - Resource type
type TranslationResponseDtoResourceType string

const (
	TranslationResponseDtoResourceTypeWorkflow TranslationResponseDtoResourceType = "workflow"
	TranslationResponseDtoResourceTypeLayout   TranslationResponseDtoResourceType = "layout"
)

func (e TranslationResponseDtoResourceType) ToPointer() *TranslationResponseDtoResourceType {
	return &e
}
func (e *TranslationResponseDtoResourceType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "workflow":
		fallthrough
	case "layout":
		*e = TranslationResponseDtoResourceType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TranslationResponseDtoResourceType: %v", v)
	}
}

// TranslationResponseDtoContent - Translation content as JSON object
type TranslationResponseDtoContent struct {
}

type TranslationResponseDto struct {
	// Resource identifier
	ResourceID string `json:"resourceId"`
	// Resource type
	ResourceType TranslationResponseDtoResourceType `json:"resourceType"`
	// Locale code
	Locale string `json:"locale"`
	// Translation content as JSON object
	Content TranslationResponseDtoContent `json:"content"`
	// Creation timestamp
	CreatedAt string `json:"createdAt"`
	// Last update timestamp
	UpdatedAt string `json:"updatedAt"`
}

func (t *TranslationResponseDto) GetResourceID() string {
	if t == nil {
		return ""
	}
	return t.ResourceID
}

func (t *TranslationResponseDto) GetResourceType() TranslationResponseDtoResourceType {
	if t == nil {
		return TranslationResponseDtoResourceType("")
	}
	return t.ResourceType
}

func (t *TranslationResponseDto) GetLocale() string {
	if t == nil {
		return ""
	}
	return t.Locale
}

func (t *TranslationResponseDto) GetContent() TranslationResponseDtoContent {
	if t == nil {
		return TranslationResponseDtoContent{}
	}
	return t.Content
}

func (t *TranslationResponseDto) GetCreatedAt() string {
	if t == nil {
		return ""
	}
	return t.CreatedAt
}

func (t *TranslationResponseDto) GetUpdatedAt() string {
	if t == nil {
		return ""
	}
	return t.UpdatedAt
}
