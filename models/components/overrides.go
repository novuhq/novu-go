// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// OverridesChannel - The channel type which is overridden
type OverridesChannel string

const (
	OverridesChannelInApp OverridesChannel = "in_app"
	OverridesChannelEmail OverridesChannel = "email"
	OverridesChannelSms   OverridesChannel = "sms"
	OverridesChannelChat  OverridesChannel = "chat"
	OverridesChannelPush  OverridesChannel = "push"
)

func (e OverridesChannel) ToPointer() *OverridesChannel {
	return &e
}
func (e *OverridesChannel) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "in_app":
		fallthrough
	case "email":
		fallthrough
	case "sms":
		fallthrough
	case "chat":
		fallthrough
	case "push":
		*e = OverridesChannel(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OverridesChannel: %v", v)
	}
}

// Source - The source of overrides
type Source string

const (
	SourceSubscriber       Source = "subscriber"
	SourceTemplate         Source = "template"
	SourceWorkflowOverride Source = "workflowOverride"
)

func (e Source) ToPointer() *Source {
	return &e
}
func (e *Source) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "subscriber":
		fallthrough
	case "template":
		fallthrough
	case "workflowOverride":
		*e = Source(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Source: %v", v)
	}
}

type Overrides struct {
	// The channel type which is overridden
	Channel OverridesChannel `json:"channel"`
	// The source of overrides
	Source Source `json:"source"`
}

func (o *Overrides) GetChannel() OverridesChannel {
	if o == nil {
		return OverridesChannel("")
	}
	return o.Channel
}

func (o *Overrides) GetSource() Source {
	if o == nil {
		return Source("")
	}
	return o.Source
}
