// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/novuhq/novu-go/internal/utils"
)

type DelayScheduledMetadataType string

const (
	DelayScheduledMetadataTypeScheduled DelayScheduledMetadataType = "scheduled"
)

func (e DelayScheduledMetadataType) ToPointer() *DelayScheduledMetadataType {
	return &e
}
func (e *DelayScheduledMetadataType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "scheduled":
		*e = DelayScheduledMetadataType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DelayScheduledMetadataType: %v", v)
	}
}

type DelayScheduledMetadata struct {
	Type      DelayScheduledMetadataType `json:"type"`
	DelayPath string                     `json:"delayPath"`
}

func (d DelayScheduledMetadata) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DelayScheduledMetadata) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, []string{"type", "delayPath"}); err != nil {
		return err
	}
	return nil
}

func (d *DelayScheduledMetadata) GetType() DelayScheduledMetadataType {
	if d == nil {
		return DelayScheduledMetadataType("")
	}
	return d.Type
}

func (d *DelayScheduledMetadata) GetDelayPath() string {
	if d == nil {
		return ""
	}
	return d.DelayPath
}
