// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// Unit of time for the look-back window.
type Unit string

const (
	UnitSeconds Unit = "seconds"
	UnitMinutes Unit = "minutes"
	UnitHours   Unit = "hours"
	UnitDays    Unit = "days"
	UnitWeeks   Unit = "weeks"
	UnitMonths  Unit = "months"
)

func (e Unit) ToPointer() *Unit {
	return &e
}
func (e *Unit) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "seconds":
		fallthrough
	case "minutes":
		fallthrough
	case "hours":
		fallthrough
	case "days":
		fallthrough
	case "weeks":
		fallthrough
	case "months":
		*e = Unit(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Unit: %v", v)
	}
}

type LookBackWindowDto struct {
	// Amount of time for the look-back window.
	Amount float64 `json:"amount"`
	// Unit of time for the look-back window.
	Unit Unit `json:"unit"`
}

func (o *LookBackWindowDto) GetAmount() float64 {
	if o == nil {
		return 0.0
	}
	return o.Amount
}

func (o *LookBackWindowDto) GetUnit() Unit {
	if o == nil {
		return Unit("")
	}
	return o.Unit
}
