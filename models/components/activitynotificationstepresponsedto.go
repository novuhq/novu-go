// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// ActivityNotificationStepResponseDtoReplyCallback - Reply callback settings
type ActivityNotificationStepResponseDtoReplyCallback struct {
}

// ControlVariables - Control variables
type ControlVariables struct {
}

// ActivityNotificationStepResponseDtoMetadata - Metadata for the workflow step
type ActivityNotificationStepResponseDtoMetadata struct {
}

// Issues - Step issues
type Issues struct {
}

type ActivityNotificationStepResponseDto struct {
	// Unique identifier of the step
	ID string `json:"_id"`
	// Whether the step is active or not
	Active bool `json:"active"`
	// Reply callback settings
	ReplyCallback *ActivityNotificationStepResponseDtoReplyCallback `json:"replyCallback,omitempty"`
	// Control variables
	ControlVariables *ControlVariables `json:"controlVariables,omitempty"`
	// Metadata for the workflow step
	Metadata *ActivityNotificationStepResponseDtoMetadata `json:"metadata,omitempty"`
	// Step issues
	Issues *Issues `json:"issues,omitempty"`
	// Filter criteria for the step
	Filters []StepFilterDto `json:"filters"`
	// Optional template for the step
	Template *MessageTemplateDto `json:"template,omitempty"`
	// Variants of the step
	Variants []ActivityNotificationStepResponseDto `json:"variants,omitempty"`
	// The identifier for the template associated with this step
	TemplateID string `json:"_templateId"`
	// The name of the step
	Name *string `json:"name,omitempty"`
	// The unique identifier for the parent step
	ParentID *string `json:"_parentId,omitempty"`
}

func (o *ActivityNotificationStepResponseDto) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ActivityNotificationStepResponseDto) GetActive() bool {
	if o == nil {
		return false
	}
	return o.Active
}

func (o *ActivityNotificationStepResponseDto) GetReplyCallback() *ActivityNotificationStepResponseDtoReplyCallback {
	if o == nil {
		return nil
	}
	return o.ReplyCallback
}

func (o *ActivityNotificationStepResponseDto) GetControlVariables() *ControlVariables {
	if o == nil {
		return nil
	}
	return o.ControlVariables
}

func (o *ActivityNotificationStepResponseDto) GetMetadata() *ActivityNotificationStepResponseDtoMetadata {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *ActivityNotificationStepResponseDto) GetIssues() *Issues {
	if o == nil {
		return nil
	}
	return o.Issues
}

func (o *ActivityNotificationStepResponseDto) GetFilters() []StepFilterDto {
	if o == nil {
		return []StepFilterDto{}
	}
	return o.Filters
}

func (o *ActivityNotificationStepResponseDto) GetTemplate() *MessageTemplateDto {
	if o == nil {
		return nil
	}
	return o.Template
}

func (o *ActivityNotificationStepResponseDto) GetVariants() []ActivityNotificationStepResponseDto {
	if o == nil {
		return nil
	}
	return o.Variants
}

func (o *ActivityNotificationStepResponseDto) GetTemplateID() string {
	if o == nil {
		return ""
	}
	return o.TemplateID
}

func (o *ActivityNotificationStepResponseDto) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *ActivityNotificationStepResponseDto) GetParentID() *string {
	if o == nil {
		return nil
	}
	return o.ParentID
}
