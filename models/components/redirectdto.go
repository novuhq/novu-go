// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/novuhq/novu-go/internal/utils"
)

// Target window for the redirection.
type Target string

const (
	TargetSelf        Target = "_self"
	TargetBlank       Target = "_blank"
	TargetParent      Target = "_parent"
	TargetTop         Target = "_top"
	TargetUnfencedTop Target = "_unfencedTop"
)

func (e Target) ToPointer() *Target {
	return &e
}
func (e *Target) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "_self":
		fallthrough
	case "_blank":
		fallthrough
	case "_parent":
		fallthrough
	case "_top":
		fallthrough
	case "_unfencedTop":
		*e = Target(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Target: %v", v)
	}
}

type RedirectDto struct {
	// URL for redirection. Must be a valid URL or start with / or {{"{{"}} variable }}.
	URL *string `json:"url,omitempty"`
	// Target window for the redirection.
	Target *Target `default:"_self" json:"target"`
}

func (r RedirectDto) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RedirectDto) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (o *RedirectDto) GetURL() *string {
	if o == nil {
		return nil
	}
	return o.URL
}

func (o *RedirectDto) GetTarget() *Target {
	if o == nil {
		return nil
	}
	return o.Target
}
