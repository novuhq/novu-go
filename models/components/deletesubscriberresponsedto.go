// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// DeleteSubscriberResponseDtoStatus - The status enum for the performed action
type DeleteSubscriberResponseDtoStatus string

const (
	DeleteSubscriberResponseDtoStatusDeleted DeleteSubscriberResponseDtoStatus = "deleted"
)

func (e DeleteSubscriberResponseDtoStatus) ToPointer() *DeleteSubscriberResponseDtoStatus {
	return &e
}
func (e *DeleteSubscriberResponseDtoStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "deleted":
		*e = DeleteSubscriberResponseDtoStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteSubscriberResponseDtoStatus: %v", v)
	}
}

type DeleteSubscriberResponseDto struct {
	// A boolean stating the success of the action
	Acknowledged bool `json:"acknowledged"`
	// The status enum for the performed action
	Status DeleteSubscriberResponseDtoStatus `json:"status"`
}

func (o *DeleteSubscriberResponseDto) GetAcknowledged() bool {
	if o == nil {
		return false
	}
	return o.Acknowledged
}

func (o *DeleteSubscriberResponseDto) GetStatus() DeleteSubscriberResponseDtoStatus {
	if o == nil {
		return DeleteSubscriberResponseDtoStatus("")
	}
	return o.Status
}
