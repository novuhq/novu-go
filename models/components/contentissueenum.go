// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// ContentIssueEnum - Type of step content issue
type ContentIssueEnum string

const (
	ContentIssueEnumIllegalVariableInControlValue ContentIssueEnum = "ILLEGAL_VARIABLE_IN_CONTROL_VALUE"
	ContentIssueEnumInvalidFilterArgInVariable    ContentIssueEnum = "INVALID_FILTER_ARG_IN_VARIABLE"
	ContentIssueEnumMissingValue                  ContentIssueEnum = "MISSING_VALUE"
	ContentIssueEnumTierLimitExceeded             ContentIssueEnum = "TIER_LIMIT_EXCEEDED"
)

func (e ContentIssueEnum) ToPointer() *ContentIssueEnum {
	return &e
}
func (e *ContentIssueEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ILLEGAL_VARIABLE_IN_CONTROL_VALUE":
		fallthrough
	case "INVALID_FILTER_ARG_IN_VARIABLE":
		fallthrough
	case "MISSING_VALUE":
		fallthrough
	case "TIER_LIMIT_EXCEEDED":
		*e = ContentIssueEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentIssueEnum: %v", v)
	}
}
