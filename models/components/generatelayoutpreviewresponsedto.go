// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"errors"
	"fmt"
	"github.com/novuhq/novu-go/internal/utils"
)

type ResultType string

const (
	ResultTypeEmail ResultType = "email"
)

func (e ResultType) ToPointer() *ResultType {
	return &e
}
func (e *ResultType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "email":
		*e = ResultType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ResultType: %v", v)
	}
}

type One struct {
	Type    *ResultType              `json:"type,omitempty"`
	Preview *EmailLayoutRenderOutput `json:"preview,omitempty"`
}

func (o One) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(o, "", false)
}

func (o *One) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &o, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (o *One) GetType() *ResultType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *One) GetPreview() *EmailLayoutRenderOutput {
	if o == nil {
		return nil
	}
	return o.Preview
}

type ResultUnionType string

const (
	ResultUnionTypeOne ResultUnionType = "1"
)

// Result - Preview result
type Result struct {
	One *One `queryParam:"inline,name=result"`

	Type ResultUnionType
}

func CreateResultOne(one One) Result {
	typ := ResultUnionTypeOne

	return Result{
		One:  &one,
		Type: typ,
	}
}

func (u *Result) UnmarshalJSON(data []byte) error {

	var one One = One{}
	if err := utils.UnmarshalJSON(data, &one, "", true, nil); err == nil {
		u.One = &one
		u.Type = ResultUnionTypeOne
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for Result", string(data))
}

func (u Result) MarshalJSON() ([]byte, error) {
	if u.One != nil {
		return utils.MarshalJSON(u.One, "", true)
	}

	return nil, errors.New("could not marshal union type Result: all fields are null")
}

type GenerateLayoutPreviewResponseDto struct {
	// Preview payload example
	PreviewPayloadExample LayoutPreviewPayloadDto `json:"previewPayloadExample"`
	// The payload schema that was used to generate the preview payload example
	Schema map[string]any `json:"schema,omitempty"`
	// Preview result
	Result Result `json:"result"`
}

func (g *GenerateLayoutPreviewResponseDto) GetPreviewPayloadExample() LayoutPreviewPayloadDto {
	if g == nil {
		return LayoutPreviewPayloadDto{}
	}
	return g.PreviewPayloadExample
}

func (g *GenerateLayoutPreviewResponseDto) GetSchema() map[string]any {
	if g == nil {
		return nil
	}
	return g.Schema
}

func (g *GenerateLayoutPreviewResponseDto) GetResult() Result {
	if g == nil {
		return Result{}
	}
	return g.Result
}
