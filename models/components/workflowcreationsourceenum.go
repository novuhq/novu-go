// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// WorkflowCreationSourceEnum - Source of workflow creation
type WorkflowCreationSourceEnum string

const (
	WorkflowCreationSourceEnumTemplateStore         WorkflowCreationSourceEnum = "template_store"
	WorkflowCreationSourceEnumEditor                WorkflowCreationSourceEnum = "editor"
	WorkflowCreationSourceEnumNotificationDirectory WorkflowCreationSourceEnum = "notification_directory"
	WorkflowCreationSourceEnumOnboardingDigestDemo  WorkflowCreationSourceEnum = "onboarding_digest_demo"
	WorkflowCreationSourceEnumOnboardingInApp       WorkflowCreationSourceEnum = "onboarding_in_app"
	WorkflowCreationSourceEnumEmptyState            WorkflowCreationSourceEnum = "empty_state"
	WorkflowCreationSourceEnumDropdown              WorkflowCreationSourceEnum = "dropdown"
	WorkflowCreationSourceEnumOnboardingGetStarted  WorkflowCreationSourceEnum = "onboarding_get_started"
	WorkflowCreationSourceEnumBridge                WorkflowCreationSourceEnum = "bridge"
	WorkflowCreationSourceEnumDashboard             WorkflowCreationSourceEnum = "dashboard"
)

func (e WorkflowCreationSourceEnum) ToPointer() *WorkflowCreationSourceEnum {
	return &e
}
func (e *WorkflowCreationSourceEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "template_store":
		fallthrough
	case "editor":
		fallthrough
	case "notification_directory":
		fallthrough
	case "onboarding_digest_demo":
		fallthrough
	case "onboarding_in_app":
		fallthrough
	case "empty_state":
		fallthrough
	case "dropdown":
		fallthrough
	case "onboarding_get_started":
		fallthrough
	case "bridge":
		fallthrough
	case "dashboard":
		*e = WorkflowCreationSourceEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WorkflowCreationSourceEnum: %v", v)
	}
}
