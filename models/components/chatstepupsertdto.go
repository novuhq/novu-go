// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// ChatStepUpsertDtoControlValues - Control values for the Chat step
type ChatStepUpsertDtoControlValues struct {
	// JSONLogic filter conditions for conditionally skipping the step execution. Supports complex logical operations with AND, OR, and comparison operators. See https://jsonlogic.com/ for full typing reference.
	Skip map[string]any `json:"skip,omitempty"`
	// Content of the chat message.
	Body *string `json:"body,omitempty"`
}

func (o *ChatStepUpsertDtoControlValues) GetSkip() map[string]any {
	if o == nil {
		return nil
	}
	return o.Skip
}

func (o *ChatStepUpsertDtoControlValues) GetBody() *string {
	if o == nil {
		return nil
	}
	return o.Body
}

type ChatStepUpsertDto struct {
	// Unique identifier of the step
	ID *string `json:"_id,omitempty"`
	// Name of the step
	Name string `json:"name"`
	// Type of the step
	Type StepTypeEnum `json:"type"`
	// Control values for the Chat step
	ControlValues *ChatStepUpsertDtoControlValues `json:"controlValues,omitempty"`
}

func (o *ChatStepUpsertDto) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ChatStepUpsertDto) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ChatStepUpsertDto) GetType() StepTypeEnum {
	if o == nil {
		return StepTypeEnum("")
	}
	return o.Type
}

func (o *ChatStepUpsertDto) GetControlValues() *ChatStepUpsertDtoControlValues {
	if o == nil {
		return nil
	}
	return o.ControlValues
}
