// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/novuhq/novu-go/internal/utils"
)

type WorkflowPreferenceDto struct {
	// A flag specifying if notification delivery is enabled for the workflow. If true, notification delivery is enabled by default for all channels. This setting can be overridden by the channel preferences.
	Enabled *bool `default:"true" json:"enabled"`
	// A flag specifying if the preference is read-only. If true, the preference cannot be changed by the Subscriber.
	ReadOnly *bool `default:"false" json:"readOnly"`
}

func (w WorkflowPreferenceDto) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WorkflowPreferenceDto) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (w *WorkflowPreferenceDto) GetEnabled() *bool {
	if w == nil {
		return nil
	}
	return w.Enabled
}

func (w *WorkflowPreferenceDto) GetReadOnly() *bool {
	if w == nil {
		return nil
	}
	return w.ReadOnly
}
